// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: pb/sql/sql.proto

/*
Package sql is a generated protocol buffer package.

It is generated from these files:
	pb/sql/sql.proto

It has these top-level messages:
	ExtraField
	SqlxMessageOptions
	SqlxFieldOptions
	SqlxServiceOptions
	SqlxMethodOptions
*/
package sql

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/gogo/protobuf/protoc-gen-gogo/descriptor"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type ExtraField struct {
	Type string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Tags string `protobuf:"bytes,3,opt,name=tags,proto3" json:"tags,omitempty"`
}

func (m *ExtraField) Reset()                    { *m = ExtraField{} }
func (m *ExtraField) String() string            { return proto.CompactTextString(m) }
func (*ExtraField) ProtoMessage()               {}
func (*ExtraField) Descriptor() ([]byte, []int) { return fileDescriptorSql, []int{0} }

func (m *ExtraField) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *ExtraField) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ExtraField) GetTags() string {
	if m != nil {
		return m.Tags
	}
	return ""
}

type SqlxMessageOptions struct {
	Orm     bool          `protobuf:"varint,1,opt,name=orm,proto3" json:"orm,omitempty"`
	Jsonb   bool          `protobuf:"varint,2,opt,name=jsonb,proto3" json:"jsonb,omitempty"`
	Gorm    bool          `protobuf:"varint,3,opt,name=gorm,proto3" json:"gorm,omitempty"`
	Table   string        `protobuf:"bytes,4,opt,name=table,proto3" json:"table,omitempty"`
	Driver  string        `protobuf:"bytes,5,opt,name=driver,proto3" json:"driver,omitempty"`
	Include []*ExtraField `protobuf:"bytes,6,rep,name=include" json:"include,omitempty"`
	Request string        `protobuf:"bytes,7,opt,name=request,proto3" json:"request,omitempty"`
	User    bool          `protobuf:"varint,8,opt,name=user,proto3" json:"user,omitempty"`
	Product bool          `protobuf:"varint,9,opt,name=product,proto3" json:"product,omitempty"`
}

func (m *SqlxMessageOptions) Reset()                    { *m = SqlxMessageOptions{} }
func (m *SqlxMessageOptions) String() string            { return proto.CompactTextString(m) }
func (*SqlxMessageOptions) ProtoMessage()               {}
func (*SqlxMessageOptions) Descriptor() ([]byte, []int) { return fileDescriptorSql, []int{1} }

func (m *SqlxMessageOptions) GetOrm() bool {
	if m != nil {
		return m.Orm
	}
	return false
}

func (m *SqlxMessageOptions) GetJsonb() bool {
	if m != nil {
		return m.Jsonb
	}
	return false
}

func (m *SqlxMessageOptions) GetGorm() bool {
	if m != nil {
		return m.Gorm
	}
	return false
}

func (m *SqlxMessageOptions) GetTable() string {
	if m != nil {
		return m.Table
	}
	return ""
}

func (m *SqlxMessageOptions) GetDriver() string {
	if m != nil {
		return m.Driver
	}
	return ""
}

func (m *SqlxMessageOptions) GetInclude() []*ExtraField {
	if m != nil {
		return m.Include
	}
	return nil
}

func (m *SqlxMessageOptions) GetRequest() string {
	if m != nil {
		return m.Request
	}
	return ""
}

func (m *SqlxMessageOptions) GetUser() bool {
	if m != nil {
		return m.User
	}
	return false
}

func (m *SqlxMessageOptions) GetProduct() bool {
	if m != nil {
		return m.Product
	}
	return false
}

type SqlxFieldOptions struct {
	Name    string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Colname string `protobuf:"bytes,2,opt,name=colname,proto3" json:"colname,omitempty"`
	Type    string `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	Tags    string `protobuf:"bytes,4,opt,name=tags,proto3" json:"tags,omitempty"`
	Drop    bool   `protobuf:"varint,5,opt,name=drop,proto3" json:"drop,omitempty"`
	Pk      bool   `protobuf:"varint,6,opt,name=pk,proto3" json:"pk,omitempty"`
	Fk      string `protobuf:"bytes,7,opt,name=fk,proto3" json:"fk,omitempty"`
}

func (m *SqlxFieldOptions) Reset()                    { *m = SqlxFieldOptions{} }
func (m *SqlxFieldOptions) String() string            { return proto.CompactTextString(m) }
func (*SqlxFieldOptions) ProtoMessage()               {}
func (*SqlxFieldOptions) Descriptor() ([]byte, []int) { return fileDescriptorSql, []int{2} }

func (m *SqlxFieldOptions) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SqlxFieldOptions) GetColname() string {
	if m != nil {
		return m.Colname
	}
	return ""
}

func (m *SqlxFieldOptions) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *SqlxFieldOptions) GetTags() string {
	if m != nil {
		return m.Tags
	}
	return ""
}

func (m *SqlxFieldOptions) GetDrop() bool {
	if m != nil {
		return m.Drop
	}
	return false
}

func (m *SqlxFieldOptions) GetPk() bool {
	if m != nil {
		return m.Pk
	}
	return false
}

func (m *SqlxFieldOptions) GetFk() string {
	if m != nil {
		return m.Fk
	}
	return ""
}

type SqlxServiceOptions struct {
	Autogen bool `protobuf:"varint,1,opt,name=autogen,proto3" json:"autogen,omitempty"`
}

func (m *SqlxServiceOptions) Reset()                    { *m = SqlxServiceOptions{} }
func (m *SqlxServiceOptions) String() string            { return proto.CompactTextString(m) }
func (*SqlxServiceOptions) ProtoMessage()               {}
func (*SqlxServiceOptions) Descriptor() ([]byte, []int) { return fileDescriptorSql, []int{3} }

func (m *SqlxServiceOptions) GetAutogen() bool {
	if m != nil {
		return m.Autogen
	}
	return false
}

type SqlxMethodOptions struct {
	Jsonb bool `protobuf:"varint,1,opt,name=jsonb,proto3" json:"jsonb,omitempty"`
}

func (m *SqlxMethodOptions) Reset()                    { *m = SqlxMethodOptions{} }
func (m *SqlxMethodOptions) String() string            { return proto.CompactTextString(m) }
func (*SqlxMethodOptions) ProtoMessage()               {}
func (*SqlxMethodOptions) Descriptor() ([]byte, []int) { return fileDescriptorSql, []int{4} }

func (m *SqlxMethodOptions) GetJsonb() bool {
	if m != nil {
		return m.Jsonb
	}
	return false
}

var E_Opts = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.MessageOptions)(nil),
	ExtensionType: (*SqlxMessageOptions)(nil),
	Field:         99901,
	Name:          "sql.opts",
	Tag:           "bytes,99901,opt,name=opts",
	Filename:      "pb/sql/sql.proto",
}

var E_Field = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.FieldOptions)(nil),
	ExtensionType: (*SqlxFieldOptions)(nil),
	Field:         99902,
	Name:          "sql.field",
	Tag:           "bytes,99902,opt,name=field",
	Filename:      "pb/sql/sql.proto",
}

var E_Server = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.ServiceOptions)(nil),
	ExtensionType: (*SqlxServiceOptions)(nil),
	Field:         99903,
	Name:          "sql.server",
	Tag:           "bytes,99903,opt,name=server",
	Filename:      "pb/sql/sql.proto",
}

var E_Method = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.MethodOptions)(nil),
	ExtensionType: (*SqlxMethodOptions)(nil),
	Field:         99904,
	Name:          "sql.method",
	Tag:           "bytes,99904,opt,name=method",
	Filename:      "pb/sql/sql.proto",
}

func init() {
	proto.RegisterType((*ExtraField)(nil), "sql.ExtraField")
	proto.RegisterType((*SqlxMessageOptions)(nil), "sql.SqlxMessageOptions")
	proto.RegisterType((*SqlxFieldOptions)(nil), "sql.SqlxFieldOptions")
	proto.RegisterType((*SqlxServiceOptions)(nil), "sql.SqlxServiceOptions")
	proto.RegisterType((*SqlxMethodOptions)(nil), "sql.SqlxMethodOptions")
	proto.RegisterExtension(E_Opts)
	proto.RegisterExtension(E_Field)
	proto.RegisterExtension(E_Server)
	proto.RegisterExtension(E_Method)
}

func init() { proto.RegisterFile("pb/sql/sql.proto", fileDescriptorSql) }

var fileDescriptorSql = []byte{
	// 516 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x53, 0xcb, 0x8e, 0xd3, 0x30,
	0x14, 0x55, 0x9a, 0x36, 0xed, 0x78, 0x24, 0x28, 0x16, 0x0c, 0x16, 0x12, 0x50, 0x75, 0x35, 0xb3,
	0x68, 0x8a, 0xca, 0xae, 0xec, 0x90, 0x40, 0x2c, 0x78, 0xc9, 0xb3, 0x63, 0x97, 0x87, 0xeb, 0x09,
	0x75, 0x62, 0xc7, 0x76, 0x46, 0xe5, 0x1f, 0xf8, 0x04, 0x7e, 0x85, 0xc7, 0x2f, 0xf1, 0x07, 0xc8,
	0xd7, 0x49, 0x26, 0x55, 0x59, 0x54, 0xba, 0xf7, 0xf8, 0xea, 0xf4, 0x9e, 0x73, 0x6e, 0xd0, 0x5c,
	0xa5, 0x6b, 0x53, 0x0b, 0xf7, 0x8b, 0x95, 0x96, 0x56, 0xe2, 0xd0, 0xd4, 0xe2, 0xc9, 0x82, 0x4b,
	0xc9, 0x05, 0x5b, 0x03, 0x94, 0x36, 0xbb, 0x75, 0xce, 0x4c, 0xa6, 0x0b, 0x65, 0xa5, 0xf6, 0x63,
	0xcb, 0x77, 0x08, 0xbd, 0x39, 0x58, 0x9d, 0xbc, 0x2d, 0x98, 0xc8, 0x31, 0x46, 0x63, 0xfb, 0x4d,
	0x31, 0x12, 0x2c, 0x82, 0xcb, 0x33, 0x0a, 0xb5, 0xc3, 0xaa, 0xa4, 0x64, 0x64, 0xe4, 0x31, 0x57,
	0xc3, 0x5c, 0xc2, 0x0d, 0x09, 0xdb, 0xb9, 0x84, 0x9b, 0xe5, 0xdf, 0x00, 0xe1, 0xeb, 0x5a, 0x1c,
	0x3e, 0x30, 0x63, 0x12, 0xce, 0x3e, 0x29, 0x5b, 0xc8, 0xca, 0xe0, 0x39, 0x0a, 0xa5, 0x2e, 0x81,
	0x71, 0x46, 0x5d, 0x89, 0x1f, 0xa2, 0xc9, 0x57, 0x23, 0xab, 0x14, 0x18, 0x67, 0xd4, 0x37, 0x8e,
	0x92, 0xbb, 0xc1, 0x10, 0x40, 0xa8, 0xdd, 0xa4, 0x4d, 0x52, 0xc1, 0xc8, 0x18, 0xfe, 0xc7, 0x37,
	0xf8, 0x02, 0x45, 0xb9, 0x2e, 0x6e, 0x99, 0x26, 0x13, 0x80, 0xdb, 0x0e, 0x5f, 0xa1, 0x69, 0x51,
	0x65, 0xa2, 0xc9, 0x19, 0x89, 0x16, 0xe1, 0xe5, 0xf9, 0xe6, 0x7e, 0xec, 0xec, 0xb8, 0x93, 0x47,
	0xbb, 0x77, 0x4c, 0xd0, 0x54, 0xb3, 0xba, 0x61, 0xc6, 0x92, 0x29, 0x70, 0x74, 0xad, 0x5b, 0xa3,
	0x31, 0x4c, 0x93, 0x99, 0x5f, 0xc3, 0xd5, 0x6e, 0x5a, 0x69, 0x99, 0x37, 0x99, 0x25, 0x67, 0x00,
	0x77, 0xed, 0xf2, 0x47, 0x80, 0xe6, 0x4e, 0x33, 0xd0, 0x77, 0x8a, 0x3b, 0xc3, 0x82, 0x81, 0x61,
	0x04, 0x4d, 0x33, 0x29, 0x06, 0x3e, 0x76, 0x6d, 0x6f, 0x79, 0x78, 0x6c, 0x39, 0xd8, 0x3b, 0xbe,
	0xb3, 0xd7, 0x61, 0xb9, 0x96, 0x0a, 0x34, 0xcf, 0x28, 0xd4, 0xf8, 0x1e, 0x1a, 0xa9, 0x3d, 0x89,
	0x00, 0x19, 0xa9, 0xbd, 0xeb, 0x77, 0xfb, 0x56, 0xd1, 0x68, 0xb7, 0x5f, 0xc6, 0x3e, 0x91, 0x6b,
	0xa6, 0x6f, 0x8b, 0xac, 0x4f, 0x84, 0xa0, 0x69, 0xd2, 0x58, 0xc9, 0x59, 0xd5, 0xa6, 0xd2, 0xb5,
	0xcb, 0x2b, 0xf4, 0xc0, 0x27, 0x68, 0x6f, 0x64, 0x2f, 0xa7, 0x8f, 0x2b, 0x18, 0xc4, 0xb5, 0xfd,
	0x88, 0xc6, 0x52, 0x59, 0x83, 0x9f, 0xc7, 0xfe, 0xc4, 0xe2, 0xee, 0xc4, 0xe2, 0xe3, 0xfc, 0xc9,
	0xcf, 0xef, 0x6e, 0xbf, 0xf3, 0xcd, 0x63, 0x08, 0xe3, 0xf4, 0x40, 0x28, 0xf0, 0x6c, 0xdf, 0xa3,
	0xc9, 0x0e, 0x4e, 0xf0, 0xe9, 0x09, 0xe1, 0xd0, 0x5c, 0xf2, 0xab, 0xa5, 0x7b, 0xd4, 0xd3, 0x0d,
	0x9f, 0xa9, 0x27, 0xd9, 0x52, 0x14, 0x19, 0xa6, 0xdd, 0x51, 0x9c, 0xee, 0x77, 0xec, 0x06, 0xf9,
	0x7d, 0xb2, 0xdf, 0xf1, 0x00, 0x6d, 0x99, 0xb6, 0x9f, 0x51, 0x54, 0x82, 0x31, 0xf8, 0xd9, 0x7f,
	0x34, 0x0f, 0x1c, 0x23, 0x7f, 0x5a, 0xca, 0x8b, 0x81, 0xe4, 0xc1, 0x3b, 0x6d, 0x79, 0x5e, 0x6f,
	0xbe, 0xbc, 0xe0, 0x85, 0xbd, 0x69, 0xd2, 0x38, 0x93, 0xe5, 0xba, 0x2c, 0x32, 0x2d, 0x57, 0x5c,
	0xab, 0xcc, 0x7f, 0xae, 0xd9, 0x8a, 0xb3, 0x6a, 0x65, 0x6a, 0x71, 0x58, 0xfb, 0x8f, 0xfb, 0x95,
	0xa9, 0x45, 0x1a, 0xc1, 0xdb, 0xcb, 0x7f, 0x01, 0x00, 0x00, 0xff, 0xff, 0xb9, 0xa1, 0x01, 0xaa,
	0xf1, 0x03, 0x00, 0x00,
}
